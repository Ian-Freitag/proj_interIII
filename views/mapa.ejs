<div id="mapa"></div>

<div class="modal" id="modalMapa" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">
					Criar Cultura
				</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
			</div>
			<div class="modal-body">


				Colocar os inputs aqui!


			</div>
			<div class="modal-footer">

				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
				<button type="button" class="btn btn-primary" onclick="criarPontoModal()">Criar Cultura</button>

			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	var mapa = L.map("mapa", { zoomControl: false }),
		popup = L.popup(),
		latClicada = 0,
		lngClicada = 0,
		modalMapa = new bootstrap.Modal(document.getElementById("modalMapa"), {
			backdrop: "static"
		});

	function iniciarMapa(lat, lng) {
		var latlng = new L.LatLng(lat, lng);

		L.control.zoom({
			position: "topright"
		}).addTo(mapa);

		L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
			subdomains: ['a', 'b', 'c'],
			center: [latlng],
			minZoom: 10
		}).addTo(mapa);

		mapa.on("click", function (e) {
			latClicada = e.latlng.lat;
			lngClicada = e.latlng.lng;

			modalMapa.show();
		});

		mapa.setView(latlng, 16);
	}

	iniciarMapa(-16.78827162, -49.23917770);

	var ws = new WebSocket("ws://localhost:8181");

	ws.onopen = function (e) {
		console.log("WebSocket conectado");

		pedirListarPontos();
	};

	ws.onclose = function (e) {
		console.log("WebSocket desconectado");
	};

	ws.onmessage = function (e) {
		var obj = JSON.parse(e.data);

		switch (obj.comando) {
			case "criarPonto":
				criarPonto(obj.ponto);
				break;

			case "listarPontos":
				listarPontos(obj.pontos);
				break;
		}
	};

	function pedirCriarPonto(ponto) {
		if (ws.readyState === WebSocket.OPEN) {
			criarPonto(ponto);

			ws.send(JSON.stringify({
				comando: "criarPonto",
				ponto: ponto
			}));
		}
	}

	function pedirListarPontos() {
		if (ws.readyState === WebSocket.OPEN) {
			ws.send(JSON.stringify({
				comando: "listarPontos"
			}));
		}
	}

	function criarPontoModal() {
		// pegar o nome e a cultura dos inputs...

		pedirCriarPonto({
			nome: "teste",
			cultura: "cult",
			lat: latClicada,
			lng: lngClicada
		});

		modalMapa.hide();
	}

	function onMarkerClick() {
		// Aqui dentro, this é o objeto marker que foi clicado.
		// Se quiser deixar vários popups abertos, é só ter um popup por marker,
		// diferente daqui, onde a gente reaproveita o objeto popup o tempo todo.

		var ponto = this.ponto;

		popup.setLatLng([ponto.lat, ponto.lng]);
		popup.setContent("<h1>" + ponto.nome + "</h1><p>" + ponto.cultura + "</p>");
		popup.openOn(mapa);
	}

	function criarPonto(ponto) {
		var highDpi = (("matchMedia" in window) && (highDpi = window.matchMedia("(min-resolution: 150dpi)")) && highDpi.matches),
			icon = L.icon({
				iconUrl: (highDpi ? "/public/images/marker@2x.png" : "/public/images/marker.png"),
				iconSize: [25, 34],
				iconAnchor: [12, 34],
				popupAnchor: [0, 25]
			});

		var marker = L.marker([ponto.lat, ponto.lng], { icon: icon });

		marker.addTo(mapa);
		marker.ponto = ponto;

		marker.on("click", onMarkerClick);
	}

	function listarPontos(pontos) {
		for (var i = 0; i < pontos.length; i++) {
			criarPonto(pontos[i]);
		}
	}

</script>
